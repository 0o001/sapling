use argparse::{Arg, Command, HelpVisibility};
pub fn add_hg_python_commands(c: Command) -> Command {
    c.subcommand(
        Command::with_name("undo")
            .help_visibility(HelpVisibility::Always)
            .arg(Arg::with_name("absolute").short(b'a'))
            .arg(Arg::with_name("branch").short(b'b').requires_value())
            .arg(Arg::with_name("force").short(b'f'))
            .arg(Arg::with_name("interactive").short(b'i'))
            .arg(Arg::with_name("keep").short(b'k'))
            .arg(Arg::with_name("step").short(b'n').requires_value())
            .arg(Arg::with_name("preview").short(b'p')),
    ).subcommand(
            Command::with_name("debuggentrees")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("skip-allowed-roots").short(b's'))
                .arg(Arg::with_name("verify")),
        )
        .subcommand(
            Command::with_name("debugcrdump")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("unified").short(b'U').requires_value())
                .arg(Arg::with_name("lfs").short(b'l'))
                .arg(Arg::with_name("obsolete")),
        )
        .subcommand(
            Command::with_name("debugsuccessorssets")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("closest")),
        )
        .subcommand(
            Command::with_name("help")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("extension").short(b'e'))
                .arg(Arg::with_name("command").short(b'c'))
                .arg(Arg::with_name("keyword").short(b'k'))
                .arg(Arg::with_name("system").short(b's').requires_value()),
        )
        .subcommand(
            Command::with_name("absorb")
                .alias("%s")
                .arg(Arg::with_name("print-changes").short(b'p'))
                .arg(Arg::with_name("interactive").short(b'i'))
                .arg(Arg::with_name("edit-lines").short(b'e'))
                .arg(Arg::with_name("print-descriptions").short(b'd'))
                .arg(Arg::with_name("dry-run").short(b'n'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("debugcachemanifest")
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("pruneall").short(b'p'))
                .arg(Arg::with_name("list").short(b'e')),
        )
        .subcommand(
            Command::with_name("tip")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("previous")
                .arg(Arg::with_name("clean"))
                .arg(Arg::with_name("newest"))
                .arg(Arg::with_name("bottom"))
                .arg(Arg::with_name("bookmark"))
                .arg(Arg::with_name("no-activate-bookmark"))
                .arg(Arg::with_name("move-bookmark").short(b'B'))
                .arg(Arg::with_name("merge")),
        )
        .subcommand(Command::with_name("gc").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("config")
                .alias("%s")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("untrusted").short(b'u'))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("local").short(b'l'))
                .arg(Arg::with_name("global").short(b'g'))
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("debugdate")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("extended").short(b'e')),
        )
        .subcommand(
            Command::with_name("debugfileset")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(
            Command::with_name("blackbox")
                .arg(Arg::with_name("limit").short(b'l').requires_value()),
        )
        .subcommand(
            Command::with_name("debugdata")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("changelog").short(b'c'))
                .arg(Arg::with_name("manifest").short(b'm'))
                .arg(Arg::with_name("dir").requires_value()),
        )
        .subcommand(Command::with_name("debugwaitonrepack").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("debugundohistory")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("index").short(b'n').requires_value())
                .arg(Arg::with_name("list").short(b'l')),
        )
        .subcommand(
            Command::with_name("debugprogress")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("spinner").short(b's'))
                .arg(Arg::with_name("nototal").short(b'n'))
                .arg(Arg::with_name("bytes").short(b'b')),
        )
        .subcommand(
            Command::with_name("hint")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("ack")),
        )
        .subcommand(
            Command::with_name("verifyremotefilelog")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("decompress").short(b'd')),
        )
        .subcommand(
            Command::with_name("addremove")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("similarity").short(b's').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("dry-run").short(b'n')),
        )
        .subcommand(
            Command::with_name("parents")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("svn")),
        )
        .subcommand(
            Command::with_name("debugfilerevision")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("debugcheckbackup")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("reporoot").requires_value())
                .arg(Arg::with_name("user").requires_value())
                .arg(Arg::with_name("hostname").requires_value()),
        )
        .subcommand(
            Command::with_name("reflog")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("commits").short(b'c'))
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("reset")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("clean").short(b'C'))
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(
            Command::with_name("rollback")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("dry-run").short(b'n'))
                .arg(Arg::with_name("force").short(b'f')),
        )
        .subcommand(Command::with_name("debugmergestate").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("amend")
                .arg(Arg::with_name("addremove").short(b'A'))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("interactive").short(b'i'))
                .arg(Arg::with_name("rebase"))
                .arg(Arg::with_name("fixup"))
                .arg(Arg::with_name("to").requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("no-move-detection"))
                .arg(Arg::with_name("stack")),
        )
        .subcommand(Command::with_name("debughistorypack").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("debugformat")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("debugrevspec")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("optimize"))
                .arg(Arg::with_name("show-revs"))
                .arg(Arg::with_name("show-set").short(b's'))
                .arg(Arg::with_name("show-stage").short(b'p').requires_value())
                .arg(Arg::with_name("no-optimized"))
                .arg(Arg::with_name("verify-optimized")),
        )
        .subcommand(
            Command::with_name("debugwalk")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("ssl")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("master").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("commit-info"))
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(Command::with_name("debugcheckpartialindex"))
        .subcommand(
            Command::with_name("cherry-pick")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("continue").short(b'c'))
                .arg(Arg::with_name("abort"))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("log"))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("currentdate").short(b'D'))
                .arg(Arg::with_name("currentuser").short(b'U'))
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("dry-run").short(b'n')),
        )
        .subcommand(
            Command::with_name("debugcommitmessage").help_visibility(HelpVisibility::Always),
        )
        .subcommand(
            Command::with_name("forget")
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("resolve")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("list").short(b'l'))
                .arg(Arg::with_name("mark").short(b'm'))
                .arg(Arg::with_name("unmark").short(b'u'))
                .arg(Arg::with_name("no-status").short(b'n'))
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("skip")),
        )
        .subcommand(Command::with_name("rage").arg(Arg::with_name("preview").short(b'p')))
        .subcommand(
            Command::with_name("commit")
                .alias("%s")
                .arg(Arg::with_name("addremove").short(b'A'))
                .arg(Arg::with_name("close-branch"))
                .arg(Arg::with_name("amend"))
                .arg(Arg::with_name("secret").short(b's'))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("interactive").short(b'i'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("reuse-message").short(b'M').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("rebase"))
                .arg(Arg::with_name("fixup"))
                .arg(Arg::with_name("to").requires_value())
                .arg(Arg::with_name("no-automv")),
        )
        .subcommand(
            Command::with_name("incoming")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("newest-first").short(b'n'))
                .arg(Arg::with_name("bundle").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("bookmarks").short(b'B'))
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure"))
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("stupid")),
        )
        .subcommand(
            Command::with_name("debugdag")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("tags").short(b't'))
                .arg(Arg::with_name("branches").short(b'b'))
                .arg(Arg::with_name("dots"))
                .arg(Arg::with_name("spaces").short(b's')),
        )
        .subcommand(
            Command::with_name("bisect")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("reset").short(b'r'))
                .arg(Arg::with_name("good").short(b'g'))
                .arg(Arg::with_name("bad").short(b'b'))
                .arg(Arg::with_name("skip").short(b's'))
                .arg(Arg::with_name("extend").short(b'e'))
                .arg(Arg::with_name("command").short(b'c').requires_value())
                .arg(Arg::with_name("noupdate").short(b'U')),
        )
        .subcommand(
            Command::with_name("rebase")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("source").short(b's').requires_value())
                .arg(Arg::with_name("base").short(b'b').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("dest").short(b'd').requires_value())
                .arg(Arg::with_name("collapse"))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("keepbranches"))
                .arg(Arg::with_name("detach").short(b'D'))
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("continue").short(b'c'))
                .arg(Arg::with_name("abort").short(b'a'))
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("restack"))
                .arg(Arg::with_name("svn"))
                .arg(Arg::with_name("interactive").short(b'i')),
        )
        .subcommand(
            Command::with_name("revert")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("no-backup").short(b'C'))
                .arg(Arg::with_name("interactive").short(b'i'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("dry-run").short(b'n')),
        )
        .subcommand(
            Command::with_name("manifest")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(Command::with_name("debugprintpartialindexfile"))
        .subcommand(
            Command::with_name("outgoing")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("newest-first").short(b'n'))
                .arg(Arg::with_name("bookmarks").short(b'B'))
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure"))
                .arg(Arg::with_name("subrepos").short(b'S')),
        )
        .subcommand(
            Command::with_name("debugdatapack")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("long"))
                .arg(Arg::with_name("node").requires_value()),
        )
        .subcommand(
            Command::with_name("restack")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("source").short(b's').requires_value())
                .arg(Arg::with_name("base").short(b'b').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("dest").short(b'd').requires_value())
                .arg(Arg::with_name("collapse"))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("keepbranches"))
                .arg(Arg::with_name("detach").short(b'D'))
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("continue").short(b'c'))
                .arg(Arg::with_name("abort").short(b'a'))
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("restack"))
                .arg(Arg::with_name("svn"))
                .arg(Arg::with_name("interactive").short(b'i')),
        )
        .subcommand(
            Command::with_name("debugfillinfinitepushmetadata")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("node").requires_value()),
        )
        .subcommand(
            Command::with_name("debugwaitbackup")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("timeout").requires_value()),
        )
        .subcommand(Command::with_name("debugnamecomplete").help_visibility(HelpVisibility::Always))
        .subcommand(Command::with_name("debugdrawdag").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("smartlog")
                .alias("%s")
                .arg(Arg::with_name("master").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("commit-info"))
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("odiff")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("change").short(b'c').requires_value())
                .arg(Arg::with_name("text").short(b'a'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("binary"))
                .arg(Arg::with_name("nodates"))
                .arg(Arg::with_name("noprefix"))
                .arg(Arg::with_name("show-function").short(b'p'))
                .arg(Arg::with_name("reverse"))
                .arg(Arg::with_name("ignore-all-space").short(b'w'))
                .arg(Arg::with_name("ignore-space-change").short(b'b'))
                .arg(Arg::with_name("ignore-blank-lines").short(b'B'))
                .arg(Arg::with_name("ignore-space-at-eol").short(b'Z'))
                .arg(Arg::with_name("unified").short(b'U').requires_value())
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("root").requires_value())
                .arg(Arg::with_name("only-files-in-revs"))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("per-file-stat-json"))
                .arg(Arg::with_name("svn"))
                .arg(Arg::with_name("since-last-arc-diff"))
                .arg(Arg::with_name("sparse").short(b's')),
        )
        .subcommand(
            Command::with_name("debuglocks")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("force-lock").short(b'L'))
                .arg(Arg::with_name("force-wlock").short(b'W'))
                .arg(Arg::with_name("force-undolog-lock").short(b'U'))
                .arg(Arg::with_name("set-lock").short(b's'))
                .arg(Arg::with_name("set-wlock").short(b'S')),
        )
        .subcommand(
            Command::with_name("debuggetbundle")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("head").short(b'H').requires_value())
                .arg(Arg::with_name("common").short(b'C').requires_value())
                .arg(Arg::with_name("type").short(b't').requires_value()),
        )
        .subcommand(
            Command::with_name("debugshell")
                .alias("%s")
                .help_visibility(HelpVisibility::Always),
        )
        .subcommand(
            Command::with_name("fold")
                .alias("%s")
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("exact"))
                .arg(Arg::with_name("from"))
                .arg(Arg::with_name("no-rebase"))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("backfilltree")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("limit").short(b'l').requires_value()),
        )
        .subcommand(
            Command::with_name("remove")
                .alias("%s")
                .arg(Arg::with_name("after").short(b'A'))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(Command::with_name("debugpushkey").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("debugupgraderepo")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("optimize").short(b'o').requires_value())
                .arg(Arg::with_name("run")),
        )
        .subcommand(
            Command::with_name("show")
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("nodates"))
                .arg(Arg::with_name("noprefix"))
                .arg(Arg::with_name("unified").short(b'U').requires_value())
                .arg(Arg::with_name("ignore-all-space").short(b'w'))
                .arg(Arg::with_name("ignore-space-change").short(b'b'))
                .arg(Arg::with_name("ignore-blank-lines").short(b'B'))
                .arg(Arg::with_name("ignore-space-at-eol").short(b'Z')),
        )
        .subcommand(
            Command::with_name("version")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("svn")),
        )
        .subcommand(
            Command::with_name("debugrebuilddirstate")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("minimal")),
        )
        .subcommand(Command::with_name("debugancestor").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("status")
                .alias("%s")
                .arg(Arg::with_name("all").short(b'A'))
                .arg(Arg::with_name("modified").short(b'm'))
                .arg(Arg::with_name("added").short(b'a'))
                .arg(Arg::with_name("removed").short(b'r'))
                .arg(Arg::with_name("deleted").short(b'd'))
                .arg(Arg::with_name("clean").short(b'c'))
                .arg(Arg::with_name("unknown").short(b'u'))
                .arg(Arg::with_name("ignored").short(b'i'))
                .arg(Arg::with_name("no-status").short(b'n'))
                .arg(Arg::with_name("terse").short(b't').requires_value())
                .arg(Arg::with_name("copies").short(b'C'))
                .arg(Arg::with_name("print0").short(b'0'))
                .arg(Arg::with_name("rev").requires_value())
                .arg(Arg::with_name("change").requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("root-relative")),
        )
        .subcommand(
            Command::with_name("locate")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("print0").short(b'0'))
                .arg(Arg::with_name("fullpath").short(b'f'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("uncommit")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("keep"))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("tags")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("debugcolor")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("style")),
        )
        .subcommand(
            Command::with_name("journal")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("commits").short(b'c'))
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("debugpathcomplete")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("full").short(b'f'))
                .arg(Arg::with_name("normal").short(b'n'))
                .arg(Arg::with_name("added").short(b'a'))
                .arg(Arg::with_name("removed").short(b'r')),
        )
        .subcommand(
            Command::with_name("purge")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("abort-on-err").short(b'a'))
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("dirs"))
                .arg(Arg::with_name("files"))
                .arg(Arg::with_name("print").short(b'p'))
                .arg(Arg::with_name("print0").short(b'0'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("pull")
                .arg(Arg::with_name("update").short(b'u'))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("bookmark").short(b'B').requires_value())
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure"))
                .arg(Arg::with_name("rebase"))
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("dest").short(b'd').requires_value())
                .arg(Arg::with_name("stupid")),
        )
        .subcommand(Command::with_name("debugresolvepartialhash"))
        .subcommand(Command::with_name("debugcheckstate").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("sba")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("follow").short(b'f'))
                .arg(Arg::with_name("follow-first"))
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("copies").short(b'C'))
                .arg(Arg::with_name("keyword").short(b'k').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("line-range").short(b'L').requires_value())
                .arg(Arg::with_name("removed"))
                .arg(Arg::with_name("only-merges").short(b'm'))
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("only-branch").requires_value())
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("prune").short(b'P').requires_value())
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("remote"))
                .arg(Arg::with_name("sparse")),
        )
        .subcommand(Command::with_name("debugpvec").help_visibility(HelpVisibility::Always))
        .subcommand(Command::with_name("githelp").alias("%s"))
        .subcommand(
            Command::with_name("wgrep")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("after-context").short(b'A').requires_value())
                .arg(
                    Arg::with_name("before-context")
                        .short(b'B')
                        .requires_value(),
                )
                .arg(Arg::with_name("context").short(b'C').requires_value())
                .arg(Arg::with_name("ignore-case").short(b'i'))
                .arg(Arg::with_name("files-with-matches").short(b'l'))
                .arg(Arg::with_name("line-number").short(b'n'))
                .arg(Arg::with_name("invert-match").short(b'V'))
                .arg(Arg::with_name("word-regexp").short(b'w'))
                .arg(Arg::with_name("extended-regexp").short(b'E'))
                .arg(Arg::with_name("fixed-strings").short(b'F'))
                .arg(Arg::with_name("perl-regexp").short(b'P'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("hide")
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("cleanup").short(b'c')),
        )
        .subcommand(
            Command::with_name("pullbackup")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("reporoot").requires_value())
                .arg(Arg::with_name("user").requires_value())
                .arg(Arg::with_name("hostname").requires_value()),
        )
        .subcommand(
            Command::with_name("backfillmanifestrevlog").help_visibility(HelpVisibility::Always),
        )
        .subcommand(Command::with_name("qrecord").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("prefetch")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("repack"))
                .arg(Arg::with_name("base").short(b'b').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("update")
                .alias("%s")
                .alias("%s")
                .alias("%s")
                .arg(Arg::with_name("clean").short(b'C'))
                .arg(Arg::with_name("check").short(b'c'))
                .arg(Arg::with_name("merge").short(b'm'))
                .arg(Arg::with_name("inactive"))
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("bookmark").short(b'B').requires_value()),
        )
        .subcommand(
            Command::with_name("diff")
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("change").short(b'c').requires_value())
                .arg(Arg::with_name("text").short(b'a'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("binary"))
                .arg(Arg::with_name("nodates"))
                .arg(Arg::with_name("noprefix"))
                .arg(Arg::with_name("show-function").short(b'p'))
                .arg(Arg::with_name("reverse"))
                .arg(Arg::with_name("ignore-all-space").short(b'w'))
                .arg(Arg::with_name("ignore-space-change").short(b'b'))
                .arg(Arg::with_name("ignore-blank-lines").short(b'B'))
                .arg(Arg::with_name("ignore-space-at-eol").short(b'Z'))
                .arg(Arg::with_name("unified").short(b'U').requires_value())
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("root").requires_value())
                .arg(Arg::with_name("only-files-in-revs"))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("per-file-stat-json"))
                .arg(Arg::with_name("svn"))
                .arg(Arg::with_name("since-last-arc-diff"))
                .arg(Arg::with_name("sparse").short(b's')),
        )
        .subcommand(
            Command::with_name("export")
                .arg(Arg::with_name("output").short(b'o').requires_value())
                .arg(Arg::with_name("switch-parent"))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("text").short(b'a'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("binary"))
                .arg(Arg::with_name("nodates")),
        )
        .subcommand(
            Command::with_name("debugdeltachain")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("changelog").short(b'c'))
                .arg(Arg::with_name("manifest").short(b'm'))
                .arg(Arg::with_name("dir").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("backout")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("merge"))
                .arg(Arg::with_name("commit"))
                .arg(Arg::with_name("no-commit"))
                .arg(Arg::with_name("parent").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value()),
        )
        .subcommand(
            Command::with_name("unhide").arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(
            Command::with_name("rename")
                .alias("%s")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("after").short(b'A'))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("dry-run").short(b'n')),
        )
        .subcommand(Command::with_name("debugcapabilities").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("backupdisable")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("hours").requires_value()),
        )
        .subcommand(
            Command::with_name("split")
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("no-rebase"))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value()),
        )
        .subcommand(
            Command::with_name("init")
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure")),
        )
        .subcommand(
            Command::with_name("redo")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("preview").short(b'p')),
        )
        .subcommand(
            Command::with_name("strip")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("no-backup"))
                .arg(Arg::with_name("nobackup"))
                .arg(Arg::with_name("").short(b'n'))
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("bookmark").short(b'B').requires_value()),
        )
        .subcommand(
            Command::with_name("unshelve")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("abort").short(b'a'))
                .arg(Arg::with_name("continue").short(b'c'))
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("name").short(b'n').requires_value())
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("date").requires_value()),
        )
        .subcommand(
            Command::with_name("debugapplystreamclonebundle")
                .help_visibility(HelpVisibility::Always),
        )
        .subcommand(
            Command::with_name("identify")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("num").short(b'n'))
                .arg(Arg::with_name("id").short(b'i'))
                .arg(Arg::with_name("branch").short(b'b'))
                .arg(Arg::with_name("tags").short(b't'))
                .arg(Arg::with_name("bookmarks").short(b'B'))
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure"))
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("metaedit")
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("fold"))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value()),
        )
        .subcommand(
            Command::with_name("debugremotefilelog")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("decompress").short(b'd')),
        )
        .subcommand(
            Command::with_name("heads")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("topo").short(b't'))
                .arg(Arg::with_name("active").short(b'a'))
                .arg(Arg::with_name("closed").short(b'c'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(Command::with_name("debugsetparents").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("top")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("clean"))
                .arg(Arg::with_name("newest"))
                .arg(Arg::with_name("rebase"))
                .arg(Arg::with_name("top"))
                .arg(Arg::with_name("bookmark"))
                .arg(Arg::with_name("no-activate-bookmark"))
                .arg(Arg::with_name("towards").requires_value())
                .arg(Arg::with_name("move-bookmark").short(b'B'))
                .arg(Arg::with_name("merge")),
        )
        .subcommand(
            Command::with_name("crecord")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("addremove").short(b'A'))
                .arg(Arg::with_name("close-branch"))
                .arg(Arg::with_name("amend"))
                .arg(Arg::with_name("secret").short(b's'))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("interactive").short(b'i'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("reuse-message").short(b'M').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("rebase"))
                .arg(Arg::with_name("fixup"))
                .arg(Arg::with_name("to").requires_value())
                .arg(Arg::with_name("no-automv")),
        )
        .subcommand(
            Command::with_name("next")
                .arg(Arg::with_name("clean"))
                .arg(Arg::with_name("newest"))
                .arg(Arg::with_name("rebase"))
                .arg(Arg::with_name("top"))
                .arg(Arg::with_name("bookmark"))
                .arg(Arg::with_name("no-activate-bookmark"))
                .arg(Arg::with_name("towards").requires_value())
                .arg(Arg::with_name("move-bookmark").short(b'B'))
                .arg(Arg::with_name("merge")),
        )
        .subcommand(Command::with_name("debugignore").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("debugobsolete")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("flags").requires_value())
                .arg(Arg::with_name("record-parents"))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("exclusive"))
                .arg(Arg::with_name("index"))
                .arg(Arg::with_name("delete").requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(Command::with_name("debugupdatecaches").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("debugrename")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(
            Command::with_name("debugwaitonprefetch").help_visibility(HelpVisibility::Always),
        )
        .subcommand(
            Command::with_name("files")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("print0").short(b'0'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S')),
        )
        .subcommand(
            Command::with_name("import")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("strip").short(b'p').requires_value())
                .arg(Arg::with_name("base").short(b'b').requires_value())
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("no-commit"))
                .arg(Arg::with_name("bypass"))
                .arg(Arg::with_name("partial"))
                .arg(Arg::with_name("exact"))
                .arg(Arg::with_name("prefix").requires_value())
                .arg(Arg::with_name("import-branch"))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("similarity").short(b's').requires_value()),
        )
        .subcommand(
            Command::with_name("pasterage")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("preview").short(b'p')),
        )
        .subcommand(
            Command::with_name("debugrebuildfncache").help_visibility(HelpVisibility::Always),
        )
        .subcommand(
            Command::with_name("sparse")
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("include").short(b'I'))
                .arg(Arg::with_name("exclude").short(b'X'))
                .arg(Arg::with_name("delete").short(b'd'))
                .arg(Arg::with_name("enable-profile"))
                .arg(Arg::with_name("disable-profile"))
                .arg(Arg::with_name("import-rules"))
                .arg(Arg::with_name("clear-rules"))
                .arg(Arg::with_name("refresh"))
                .arg(Arg::with_name("reset"))
                .arg(Arg::with_name("cwd-list"))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("debugdiscovery")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("old"))
                .arg(Arg::with_name("nonheads"))
                .arg(Arg::with_name("rev").requires_value())
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure")),
        )
        .subcommand(
            Command::with_name("debugwireargs")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("three").requires_value())
                .arg(Arg::with_name("four").requires_value())
                .arg(Arg::with_name("five").requires_value())
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure")),
        )
        .subcommand(
            Command::with_name("debugpickmergetool")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("changedelete"))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("tool").short(b't').requires_value()),
        )
        .subcommand(
            Command::with_name("branch")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("clean").short(b'C'))
                .arg(Arg::with_name("new")),
        )
        .subcommand(
            Command::with_name("unbundle")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("update").short(b'u')),
        )
        .subcommand(
            Command::with_name("debugbuildannotatecache")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("isbackedup")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("remote")),
        )
        .subcommand(
            Command::with_name("log")
                .alias("%s")
                .arg(Arg::with_name("follow").short(b'f'))
                .arg(Arg::with_name("follow-first"))
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("copies").short(b'C'))
                .arg(Arg::with_name("keyword").short(b'k').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("line-range").short(b'L').requires_value())
                .arg(Arg::with_name("removed"))
                .arg(Arg::with_name("only-merges").short(b'm'))
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("only-branch").requires_value())
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("prune").short(b'P').requires_value())
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("remote"))
                .arg(Arg::with_name("sparse")),
        )
        .subcommand(
            Command::with_name("debugcomplete")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("options").short(b'o')),
        )
        .subcommand(
            Command::with_name("clone")
                .arg(Arg::with_name("noupdate").short(b'U'))
                .arg(Arg::with_name("updaterev").short(b'u').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("pull"))
                .arg(Arg::with_name("uncompressed"))
                .arg(Arg::with_name("stream"))
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure"))
                .arg(Arg::with_name("shallow"))
                .arg(Arg::with_name("mirror"))
                .arg(Arg::with_name("stupid"))
                .arg(Arg::with_name("tagpaths").short(b'T').requires_value())
                .arg(Arg::with_name("branchdir").requires_value())
                .arg(Arg::with_name("trunkdir").requires_value())
                .arg(Arg::with_name("infix").requires_value())
                .arg(Arg::with_name("authors").short(b'A').requires_value())
                .arg(Arg::with_name("filemap").requires_value())
                .arg(Arg::with_name("layout").requires_value())
                .arg(Arg::with_name("branchmap").requires_value())
                .arg(Arg::with_name("tagmap").requires_value())
                .arg(Arg::with_name("startrev").requires_value())
                .arg(Arg::with_name("enable-profile").requires_value())
                .arg(Arg::with_name("include").requires_value())
                .arg(Arg::with_name("exclude").requires_value()),
        )
        .subcommand(
            Command::with_name("grep")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("after-context").short(b'A').requires_value())
                .arg(
                    Arg::with_name("before-context")
                        .short(b'B')
                        .requires_value(),
                )
                .arg(Arg::with_name("context").short(b'C').requires_value())
                .arg(Arg::with_name("ignore-case").short(b'i'))
                .arg(Arg::with_name("files-with-matches").short(b'l'))
                .arg(Arg::with_name("line-number").short(b'n'))
                .arg(Arg::with_name("invert-match").short(b'V'))
                .arg(Arg::with_name("word-regexp").short(b'w'))
                .arg(Arg::with_name("extended-regexp").short(b'E'))
                .arg(Arg::with_name("fixed-strings").short(b'F'))
                .arg(Arg::with_name("perl-regexp").short(b'P'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("getavailablebackups")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("user").requires_value())
                .arg(Arg::with_name("json")),
        )
        .subcommand(
            Command::with_name("repack")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("background"))
                .arg(Arg::with_name("incremental"))
                .arg(Arg::with_name("packsonly"))
                .arg(Arg::with_name("looseonly")),
        )
        .subcommand(Command::with_name("unamend"))
        .subcommand(
            Command::with_name("cat")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("output").short(b'o').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("decode"))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("record")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("addremove").short(b'A'))
                .arg(Arg::with_name("close-branch"))
                .arg(Arg::with_name("amend"))
                .arg(Arg::with_name("secret").short(b's'))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("logfile").short(b'l').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("ignore-all-space").short(b'w'))
                .arg(Arg::with_name("ignore-space-change").short(b'b'))
                .arg(Arg::with_name("ignore-blank-lines").short(b'B'))
                .arg(Arg::with_name("ignore-space-at-eol").short(b'Z')),
        )
        .subcommand(
            Command::with_name("prune")
                .arg(Arg::with_name("succ").short(b's').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("biject"))
                .arg(Arg::with_name("fold"))
                .arg(Arg::with_name("split"))
                .arg(Arg::with_name("bookmark").short(b'B').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value()),
        )
        .subcommand(
            Command::with_name("debugrevlog")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("changelog").short(b'c'))
                .arg(Arg::with_name("manifest").short(b'm'))
                .arg(Arg::with_name("dir").requires_value())
                .arg(Arg::with_name("dump").short(b'd')),
        )
        .subcommand(
            Command::with_name("shelve")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("addremove").short(b'A'))
                .arg(Arg::with_name("unknown").short(b'u'))
                .arg(Arg::with_name("cleanup"))
                .arg(Arg::with_name("date").requires_value())
                .arg(Arg::with_name("delete").short(b'd'))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("list").short(b'l'))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("name").short(b'n').requires_value())
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("interactive").short(b'i'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(Command::with_name("debugcommands").help_visibility(HelpVisibility::Always))
        .subcommand(Command::with_name("root").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("debugsub")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(Command::with_name("debugtreedirstate").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("debuglabelcomplete").help_visibility(HelpVisibility::Always),
        )
        .subcommand(
            Command::with_name("summary")
                .alias("%s")
                .arg(Arg::with_name("remote")),
        )
        .subcommand(
            Command::with_name("annotate")
                .alias("%s")
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("follow"))
                .arg(Arg::with_name("no-follow"))
                .arg(Arg::with_name("text").short(b'a'))
                .arg(Arg::with_name("user").short(b'u'))
                .arg(Arg::with_name("file").short(b'f'))
                .arg(Arg::with_name("date").short(b'd'))
                .arg(Arg::with_name("number").short(b'n'))
                .arg(Arg::with_name("changeset").short(b'c'))
                .arg(Arg::with_name("line-number").short(b'l'))
                .arg(Arg::with_name("skip").requires_value())
                .arg(Arg::with_name("ignore-all-space").short(b'w'))
                .arg(Arg::with_name("ignore-space-change").short(b'b'))
                .arg(Arg::with_name("ignore-blank-lines").short(b'B'))
                .arg(Arg::with_name("ignore-space-at-eol").short(b'Z'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("phabdiff").short(b'p')),
        )
        .subcommand(
            Command::with_name("fsl")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("master").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("commit-info"))
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("tag")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("local").short(b'l'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("remove"))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("message").short(b'm').requires_value())
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value()),
        )
        .subcommand(Command::with_name("debugrebuildpartialindex"))
        .subcommand(
            Command::with_name("debugtemplate")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("define").short(b'D').requires_value()),
        )
        .subcommand(
            Command::with_name("push")
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("bookmark").short(b'B').requires_value())
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("new-branch"))
                .arg(Arg::with_name("pushvars").requires_value())
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure"))
                .arg(Arg::with_name("stupid"))
                .arg(Arg::with_name("to").requires_value())
                .arg(Arg::with_name("non-forward-move"))
                .arg(Arg::with_name("create"))
                .arg(Arg::with_name("bundle-store"))
                .arg(Arg::with_name("delete").short(b'd').requires_value())
                .arg(Arg::with_name("allow-anon")),
        )
        .subcommand(
            Command::with_name("archive")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("no-decode"))
                .arg(Arg::with_name("prefix").short(b'p').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("type").short(b't').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(
            Command::with_name("graft")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("continue").short(b'c'))
                .arg(Arg::with_name("abort"))
                .arg(Arg::with_name("edit").short(b'e'))
                .arg(Arg::with_name("log"))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("currentdate").short(b'D'))
                .arg(Arg::with_name("currentuser").short(b'U'))
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("tool").short(b't').requires_value())
                .arg(Arg::with_name("dry-run").short(b'n')),
        )
        .subcommand(
            Command::with_name("paths")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("delete").short(b'd').requires_value())
                .arg(Arg::with_name("add").short(b'a').requires_value()),
        )
        .subcommand(Command::with_name("recover").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("verify")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(
            Command::with_name("debugextensions")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("excludedefault"))
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("pushbackup")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("background")),
        )
        .subcommand(Command::with_name("debugfsinfo").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("histedit")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("commands").requires_value())
                .arg(Arg::with_name("continue").short(b'c'))
                .arg(Arg::with_name("edit-plan"))
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("abort"))
                .arg(Arg::with_name("outgoing").short(b'o'))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("retry").short(b'x'))
                .arg(Arg::with_name("show-plan")),
        )
        .subcommand(
            Command::with_name("debuginstall")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("copy")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("after").short(b'A'))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("dry-run").short(b'n')),
        )
        .subcommand(
            Command::with_name("fssl")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("master").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("commit-info"))
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(
            Command::with_name("histgrep")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("print0").short(b'0'))
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("text").short(b'a'))
                .arg(Arg::with_name("follow").short(b'f'))
                .arg(Arg::with_name("ignore-case").short(b'i'))
                .arg(Arg::with_name("files-with-matches").short(b'l'))
                .arg(Arg::with_name("line-number").short(b'n'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("user").short(b'u'))
                .arg(Arg::with_name("date").short(b'd'))
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value()),
        )
        .subcommand(Command::with_name("cachemanifest"))
        .subcommand(Command::with_name("debugkeepset").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("serve")
                .arg(Arg::with_name("accesslog").short(b'A').requires_value())
                .arg(Arg::with_name("daemon").short(b'd'))
                .arg(Arg::with_name("daemon-postexec").requires_value())
                .arg(Arg::with_name("errorlog").short(b'E').requires_value())
                .arg(Arg::with_name("port").short(b'p').requires_value())
                .arg(Arg::with_name("address").short(b'a').requires_value())
                .arg(Arg::with_name("prefix").requires_value())
                .arg(Arg::with_name("name").short(b'n').requires_value())
                .arg(Arg::with_name("web-conf").requires_value())
                .arg(Arg::with_name("webdir-conf").requires_value())
                .arg(Arg::with_name("pid-file").requires_value())
                .arg(Arg::with_name("port-file").requires_value())
                .arg(Arg::with_name("stdio"))
                .arg(Arg::with_name("cmdserver").requires_value())
                .arg(Arg::with_name("templates").short(b't').requires_value())
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("ipv6").short(b'6'))
                .arg(Arg::with_name("certificate").requires_value())
                .arg(Arg::with_name("read-only"))
                .arg(Arg::with_name("subrepos").short(b'S')),
        )
        .subcommand(
            Command::with_name("sl")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("master").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("commit-info"))
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value()),
        )
        .subcommand(Command::with_name("dump_commands").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("bundle")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("base").requires_value())
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("type").short(b't').requires_value())
                .arg(Arg::with_name("ssh").short(b'e').requires_value())
                .arg(Arg::with_name("remotecmd").requires_value())
                .arg(Arg::with_name("insecure")),
        )
        .subcommand(Command::with_name("debugknown").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("bookmarks")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("delete").short(b'd'))
                .arg(Arg::with_name("strip").short(b'D'))
                .arg(Arg::with_name("rename").short(b'm').requires_value())
                .arg(Arg::with_name("inactive").short(b'i'))
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("track").short(b't').requires_value())
                .arg(Arg::with_name("untrack").short(b'u'))
                .arg(Arg::with_name("list-remote"))
                .arg(Arg::with_name("remote-path").requires_value())
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("remote")),
        )
        .subcommand(
            Command::with_name("debugbuilddag")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("mergeable-file").short(b'm'))
                .arg(Arg::with_name("overwritten-file").short(b'o'))
                .arg(Arg::with_name("new-file").short(b'n')),
        )
        .subcommand(
            Command::with_name("debugindex")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("changelog").short(b'c'))
                .arg(Arg::with_name("manifest").short(b'm'))
                .arg(Arg::with_name("dir").requires_value())
                .arg(Arg::with_name("format").short(b'f').requires_value()),
        )
        .subcommand(
            Command::with_name("phase")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("public").short(b'p'))
                .arg(Arg::with_name("draft").short(b'd'))
                .arg(Arg::with_name("secret").short(b's'))
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(
            Command::with_name("backupdelete")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("reporoot").requires_value())
                .arg(Arg::with_name("hostname").requires_value()),
        )
        .subcommand(
            Command::with_name("add")
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("subrepos").short(b'S'))
                .arg(Arg::with_name("dry-run").short(b'n'))
                .arg(Arg::with_name("sparse").short(b's')),
        )
        .subcommand(
            Command::with_name("svn")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("svn-url").short(b'u').requires_value())
                .arg(Arg::with_name("stupid"))
                .arg(Arg::with_name("authors").short(b'A').requires_value())
                .arg(Arg::with_name("filemap").requires_value())
                .arg(Arg::with_name("force"))
                .arg(Arg::with_name("username").requires_value())
                .arg(Arg::with_name("password").requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("unsafe-skip-uuid-check")),
        )
        .subcommand(
            Command::with_name("branches")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("active").short(b'a'))
                .arg(Arg::with_name("closed").short(b'c'))
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("remote")),
        )
        .subcommand(Command::with_name("debugfastpartialmatchstat"))
        .subcommand(
            Command::with_name("bottom")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("clean"))
                .arg(Arg::with_name("newest"))
                .arg(Arg::with_name("bottom"))
                .arg(Arg::with_name("bookmark"))
                .arg(Arg::with_name("no-activate-bookmark"))
                .arg(Arg::with_name("move-bookmark").short(b'B'))
                .arg(Arg::with_name("merge")),
        )
        .subcommand(Command::with_name("debugssl").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("merge")
                .arg(Arg::with_name("force").short(b'f'))
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("preview").short(b'P'))
                .arg(Arg::with_name("tool").short(b't').requires_value()),
        )
        .subcommand(Command::with_name("backupenable").help_visibility(HelpVisibility::Always))
        .subcommand(
            Command::with_name("chistedit")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("keep").short(b'k'))
                .arg(Arg::with_name("rev").short(b'r').requires_value()),
        )
        .subcommand(
            Command::with_name("debugindexdot")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("changelog").short(b'c'))
                .arg(Arg::with_name("manifest").short(b'm'))
                .arg(Arg::with_name("dir").requires_value()),
        )
        .subcommand(
            Command::with_name("debugdirstate")
                .alias("%s")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("nodates"))
                .arg(Arg::with_name("datesort")),
        )
        .subcommand(
            Command::with_name("debugcreatestreamclonebundle")
                .help_visibility(HelpVisibility::Always),
        )
        .subcommand(
            Command::with_name("sb")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("follow").short(b'f'))
                .arg(Arg::with_name("follow-first"))
                .arg(Arg::with_name("date").short(b'd').requires_value())
                .arg(Arg::with_name("copies").short(b'C'))
                .arg(Arg::with_name("keyword").short(b'k').requires_value())
                .arg(Arg::with_name("rev").short(b'r').requires_value())
                .arg(Arg::with_name("line-range").short(b'L').requires_value())
                .arg(Arg::with_name("removed"))
                .arg(Arg::with_name("only-merges").short(b'm'))
                .arg(Arg::with_name("user").short(b'u').requires_value())
                .arg(Arg::with_name("only-branch").requires_value())
                .arg(Arg::with_name("branch").short(b'b').requires_value())
                .arg(Arg::with_name("prune").short(b'P').requires_value())
                .arg(Arg::with_name("patch").short(b'p'))
                .arg(Arg::with_name("git").short(b'g'))
                .arg(Arg::with_name("limit").short(b'l').requires_value())
                .arg(Arg::with_name("no-merges").short(b'M'))
                .arg(Arg::with_name("stat"))
                .arg(Arg::with_name("graph").short(b'G'))
                .arg(Arg::with_name("style").requires_value())
                .arg(Arg::with_name("template").short(b'T').requires_value())
                .arg(Arg::with_name("include").short(b'I').requires_value())
                .arg(Arg::with_name("exclude").short(b'X').requires_value())
                .arg(Arg::with_name("all"))
                .arg(Arg::with_name("remote"))
                .arg(Arg::with_name("sparse")),
        )
        .subcommand(
            Command::with_name("debugbundle")
                .help_visibility(HelpVisibility::Always)
                .arg(Arg::with_name("all").short(b'a'))
                .arg(Arg::with_name("part-type").requires_value())
                .arg(Arg::with_name("spec")),
        )
}
