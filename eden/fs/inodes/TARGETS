# @autodeps

thrift_library(
    name = "serialization",
    languages = [
        "cpp2",
        "py",
    ],
    py_base_module = "facebook.eden",
    thrift_args = ["--strict"],
    thrift_srcs = {
        "overlay.thrift": [],
    },
    deps = [
        ":hgdirstate",
    ],
)

thrift_library(
    name = "hgdirstate",
    # Need to support .java and .py because eden.thrift depends on this file.
    languages = [
        "cpp2",
        "java",
        "py",
    ],
    py_base_module = "facebook",
    thrift_args = ["--strict"],
    thrift_srcs = {
        "hgdirstate.thrift": None,
    },
)

cpp_library(
    name = "inodes",
    srcs = glob(["*.cpp"]),
    headers = glob(["*.h"]),
    deps = [
        ":hgdirstate-cpp2",
        ":serialization-cpp2",
        "@/eden/fs/config:config",
        "@/eden/fs/fuse:fusell",
        "@/eden/fs/journal:journal",
        "@/eden/fs/model:model",
        "@/eden/fs/model/git:gitignore",
        "@/eden/fs/service:thrift-streaming-cpp2",
        "@/eden/fs/service:thrift_cpp",
        "@/eden/fs/store:store",
        "@/eden/fs/utils:utils",
        "@/folly:exception",
        "@/folly:exception_wrapper",
        "@/folly:file",
        "@/folly:file_util",
        "@/folly:format",
        "@/folly:likely",
        "@/folly:map_util",
        "@/folly:optional",
        "@/folly:portability",
        "@/folly:range",
        "@/folly:shared_mutex",
        "@/folly:string",
        "@/folly:synchronized",
        "@/folly:thread_local",
        "@/folly:unit",
        "@/folly/experimental:string_keyed_unordered_map",
        "@/folly/experimental/logging:logging",
        "@/folly/futures:core",
        "@/folly/io:iobuf",
        "@/thrift/lib/cpp2/protocol:protocol",
        "@/wangle:wangle",
    ],
    external_deps = [
        "boost",
        "gflags",
        "glog",
        ("boost", None, "boost_filesystem"),
        ("openssl", None, "crypto"),
    ],
)
