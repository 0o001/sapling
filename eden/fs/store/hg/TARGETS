# Note that we don't have a python_binary() rule for hg_import_helper.py
# This gets run as a standalone script using the system Python installation,
# rather than as a PAR file.  It needs to use the system python interpreter
# in order to find the system's installed mercurial libraries.
# @autodeps

TESTER_SRCS = ["tester.cpp"]

cpp_library(
    name = "hg",
    srcs = glob(
        ["*.cpp"],
        excludes = TESTER_SRCS,
    ),
    headers = glob(["*.h"]),
    deps = [
        "@/eden/fs/model:model",
        "@/eden/fs/model/git:git",
        "@/eden/fs/store:store",
        "@/eden/fs/utils:utils",
        "@/eden/hg/datastorage:datapack",
        "@/folly:array",
        "@/folly:bits",
        "@/folly:conv",
        "@/folly:file",
        "@/folly:range",
        "@/folly:subprocess",
        "@/folly:synchronized",
        "@/folly/experimental:env_util",
        "@/folly/experimental/logging:logging",
        "@/folly/futures:core",
        "@/folly/io:iobuf",
    ],
    external_deps = [
        "gflags",
        "glog",
        ("boost", None, "boost_filesystem"),
    ],
)

cpp_binary(
    name = "tester",
    srcs = TESTER_SRCS,
    deps = [
        ":hg",
        "@/eden/fs/model:model",
        "@/eden/fs/store:store",
        "@/eden/fs/utils:utils",
        "@/folly/init:init",
    ],
    external_deps = [
        "gflags",
    ],
)
