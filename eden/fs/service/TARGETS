include_defs('//eden/DEFS')
include_defs('//eden/fs/service/DEFS')

create_eden_fs_rules(
  suffix = get_oss_suffix(),
  subdir = 'out.oss',
  server_srcs = ['oss/EdenServer.cpp'],
  server_deps = [],
)

thrift_library(
  name = 'thrift',
  thrift_args = ['--strict'],
  thrift_srcs = {
    'eden.thrift': ['EdenService'],
  },
  py_base_module = 'facebook',
  languages = ['cpp2', 'java', 'py'],
  deps = [
    '//common/fb303/if:fb303',
  ],
)

thrift_library(
  name = 'thrift-streaming',
  thrift_args = ['--strict'],
  thrift_srcs = {
    'eden.thrift': ['EdenService'],
  },
  py_base_module = 'facebook',
  languages = ['cpp2'],
  deps = [':thrift'],
)

python_library(
  name = 'py-client',
  srcs = [
    '__init__.py',
    'client.py',
  ],
  base_module = 'eden.thrift',
  deps = [
    '//eden/fs/service:thrift-py',
  ],
)

cpp_library(
  name = 'EdenMountHandler',
  headers = [
    'EdenMountHandler.h',
  ],
  srcs = [
    'EdenMountHandler.cpp',
  ],
  deps = [
    ':thrift-cpp2',
    '//eden/fs/inodes:inodes',
    '//eden/fuse:fusell',
    '//eden/utils:utils',
    '//folly:folly',
  ],
)

if is_facebook_internal():
    include_defs('//eden/fs/service/facebook/DEFS')
    create_eden_fs_rules(
        suffix = get_fb_suffix(),
        subdir = 'out.fb',
        server_srcs = [
          'facebook/EdenServer.cpp',
        ],
        server_deps = [
          '//common/services/cpp:cpp',
        ],
    )

# JAVA BINDINGS FOR THRIFT ENDPOINT
#
# There are two JAR files that we expect Java clients to use:
# 1. A JAR that defines Eden's Thrift API.
# 2. A JAR that contains the general Java library for Thrift.
#
# For 1, when eden.thrift changes:
#
#     buck build \
#         --config java.target_level=7 \
#         --config java.source_level=7 \
#        //eden/fs/service:thrift-java
#
# Copy the resulting JAR
# (`buck targets --show-output //eden/fs/service:thrift-java`) to the project
# where you are using Eden in Java. (Note that the Java 7 config options are
# specified because Buck itself is currently limited to Java 7.)
#
# For 2, you should only have to build this once:
#
#     buck build \
#         --config java.target_level=7 \
#         --config java.source_level=7 \
#        //eden/fs/service:java-thrift-dependencies
#
# Copy the resulting JAR
# (`buck targets --show-output //eden/fs/service:java-thrift-dependencies`) to
# any project where you are using Thrift in Java. In theory, if the Java
# bindings for Thrift change, you will have to rebuild this, but it's unclear
# whether that code sees much activity these days. To be safe, you could always
# update this JAR when you update the Eden JAR.

# This java_binary() exists as a simple way to get //thrift/lib/java/src:thrift
# and all of its transitive dependencies into one JAR file.
java_binary(
  name = 'java-thrift-dependencies',
  # Currently, //thrift/lib/java/src:thrift pulls in org.slf4j, org.iq80.snappy,
  # and org.apache.commons.lang. org.iq80.snappy is the only one we keep.
  blacklist = [
    # Thrift only needs this dependency if the generated Java code uses
    # `HashCodeBuilder`, which we do not.
    'org.apache.commons.lang',

    # The primary consumer of this JAR is Buck. Buck already has its own copy of
    # slf4j that should be compatible with the one we are pulling in as part of
    # this build. We decide to strip it rather than jarjar it.
    'org.slf4j',
  ],
  deps = [
    '//common/fb303/if:fb303-java',
    '//thrift/lib/java:thrift',
  ],
)
